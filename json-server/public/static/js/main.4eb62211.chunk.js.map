{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","tag","left","middle","object","body","heading","id","About","leaders","map","to","active","title","list","RenderMenuItem","onClick","width","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","alert","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","classNmae","select","textarea","rows","type","color","Component","CommentForm","state","isCommentFormModalOpen","toggleCommentFormModal","handleCommentFormSubmit","postComment","dishId","rating","author","comment","setState","Fragment","outline","isOpen","toggle","RenderDish","top","RenderComments","comments","cmnts","Intl","DateTimeFormat","year","month","day","format","Date","date","parse","DishDetail","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","event","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","messgae","json","ActionTypes","payload","addComment","catch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eb62211.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'; \r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                        <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n            </FadeTransform>    \r\n        );\r\n    }        \r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                        item={props.dish} \r\n                        isLoading={props.dishesLoading} \r\n                        errMess={props.dishesErrMess} \r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                        item={props.promotion} \r\n                        isLoading={props.promoLoading} \r\n                        errMess={props.promoErrMess} \r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard \r\n                        item={props.leader} \r\n                        isLoading={props.leaderLoading}\r\n                        errMess={props.leaderErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport { Loading } from \"./LoadingComponent\";\r\n\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body className=\"col-12\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </Media>    \r\n            </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderContent({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    } else if (errMess) {\r\n        return <h4>{errMess}</h4>;\r\n    } else\r\n        return (\r\n            <Stagger in>\r\n                {leaders.map(leader => (\r\n                    <Fade in key={leader.id}>\r\n                        <RenderLeader key={leader.id} leader={leader} />\r\n                    </Fade>\r\n                ))}\r\n            </Stagger>\r\n        );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                    <div className =\"row\">\r\n                        <Media list>\r\n                            {leaders}\r\n                        </Media>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({ dish, onClick }) {\r\n        return(\r\n            <Card>  \r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>    \r\n                    </CardImgOverlay>\r\n                </Link>    \r\n            </Card>\r\n        );\r\n    }\r\n    \r\n    const Menu = (props) => {\r\n     \r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            )\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/home\">Home</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component { \r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n      \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }  \r\n    \r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback( values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message );\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        \r\n\r\n        return(\r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/home'>Home</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Contact Us</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />    \r\n                                        \r\n                                </Col>\r\n                            </Row>\r\n\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />    \r\n                                </Col>                        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />   \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />        \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                classNmae=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" >\r\n                                    </Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem, CardBody, CardText } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Button, Modal, ModalBody, ModalHeader, Label, Row, Col\r\n} from \"reactstrap\";\r\n\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\n\r\n/**........................ comment component ends ................................................. */\r\n//// validators\r\nconst required = (val) => val && val.length; //value > 0\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            isCommentFormModalOpen: false\r\n        };\r\n\r\n        this.toggleCommentFormModal = this.toggleCommentFormModal.bind(this);\r\n        this.handleCommentFormSubmit = this.handleCommentFormSubmit.bind(this);\r\n\r\n    }\r\n\r\n    handleCommentFormSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n\r\n    }\r\n\r\n    toggleCommentFormModal() {\r\n        this.setState({\r\n            isCommentFormModalOpen: !this.state.isCommentFormModalOpen\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleCommentFormModal}>\r\n                    <span className=\"fa fa-comments fa-lg\"></span> Submit Comment\r\n                </Button>\r\n\r\n\r\n                {/* commentform  Modal */}\r\n                <Modal isOpen={this.state.isCommentFormModalOpen} toggle={this.toggleCommentFormModal} >\r\n                    <ModalHeader toggle={this.toggleCommentFormModal}> Submit Comment </ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <LocalForm onSubmit={(values) => this.handleCommentFormSubmit(values)}>\r\n\r\n                            {/* rating */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12} >Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\"\r\n                                        className=\"form-control\"\r\n                                        name=\"rating\"\r\n                                        id=\"rating\"\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n                                    >\r\n                                        <option>Please Select</option>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            {/* author */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}> Your Name </Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n\r\n\r\n                            {/* comment */}\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                            {/* submit button */}\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </LocalForm>\r\n\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n/**........................ comment component ends ................................................. */\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className='col-12 col-md-5 m-1'>\r\n                <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle> {dish.name}</CardTitle>\r\n                            <CardText> {dish.description} </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n                    \r\n                </div>   \r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderComments({dish, comments, postComment, dishId}){\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n\r\n            )\r\n        })\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n\r\n                <Stagger in> \r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                </Stagger>\r\n                <CommentForm \r\n                    dish={dish} \r\n                    comments={comments} \r\n                    dishId={dishId} \r\n                    postComment={postComment} \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">            \r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (props.errMess) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">            \r\n                            <h4>{props.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (props.dish != null)\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>{props.dish.name}</h3>\r\n                                <hr/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <RenderDish dish={props.dish} />\r\n                            <RenderComments comments={props.comments} \r\n                                postComment={props.postComment}\r\n                                dishId={props.dish.id}    \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n           else\r\n                return(\r\n                     <div></div>\r\n                );\r\n          } \r\n    \r\n\r\n\r\nexport default DishDetail; ","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' />\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'>\r\n                                <span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'>\r\n                                <span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'>\r\n                                <span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'>\r\n                                <span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                    </Collapse>\r\n                    \r\n\r\n\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>           \r\n                </ModalBody>\r\n            </Modal>\r\n                \r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n<div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Footer;","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n\r\n/*----------For Dishes---------*/\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\n/*----------For Comments---------*/\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\n/*----------For Promos---------*/\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\n/*----------For Leaders---------*/\r\n\r\nexport const LEADERS_LOADING ='LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment      \r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.messgae);\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { \r\n        console.log('post comments', error.message); \r\n        alert('Your comment could not be posted\\nError: '+error.message); \r\n    });\r\n};\r\n\r\n\r\n/**.......... Feedback ............................ */\r\n\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message,\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n\r\n            if (response.ok) {\r\n\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            ////if no responmse from server \r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => alert(JSON.stringify(response)))\r\n        .catch(error => {\r\n            console.log('Post Comments', error.message);\r\n            alert('Comment could not be posted\\nError' + error.message);\r\n        });\r\n\r\n}\r\n\r\n\r\n/**.......... Dishes............................ */\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\n\r\n/**.......... Comments............................ */\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\n\r\n/**.......... Promos............................ */\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n\r\n/**.......... leaders............................ */\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch( leadersLoading() );\r\n\r\n    return fetch( baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n         \r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then( leaders => dispatch( addLeaders(leaders) ) ) \r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n}); ","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  \r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n          <Home\r\n            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n            promoLoading={this.props.promotions.isLoading}\r\n            promoErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n            leaderLoading={this.props.leaders.isLoading}\r\n            leaderErrMess={this.props.leaders.errMess} \r\n          />\r\n      );\r\n    }\r\n\r\n   const AboutUsPage = () => {\r\n      return(\r\n          <About \r\n              leaders={this.props.leaders.leaders}\r\n              leaderLoading={this.props.leaders.isLoading}\r\n              leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}/>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div> \r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                <Route exact path=\"/aboutus\" component={ AboutUsPage } />\r\n                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (\r\n    state = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes:[]\r\n    }, \r\n    action\r\n    ) => {\r\n        switch (action.type) {\r\n            case ActionTypes.ADD_DISHES:\r\n                return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n            case ActionTypes.DISHES_LOADING:\r\n                return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n            case ActionTypes.DISHES_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload};\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (\r\n    state = { \r\n        errMess: null, \r\n        comments:[]\r\n    }, \r\n    action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n        return {\r\n            ...state, \r\n            errMess: null, \r\n            comments: action.payload\r\n            };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n        return {\r\n            ...state, \r\n            errMess: action.payload\r\n            };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n        return { \r\n            ...state, \r\n            comments: state.comments.concat(comment)\r\n        };\r\n\r\n    default:\r\n        return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (\r\n    state  = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions:[]\r\n    }, \r\n    action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import { LEADERS } from '../shared/leaders';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent'; \nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n      \n      \n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}